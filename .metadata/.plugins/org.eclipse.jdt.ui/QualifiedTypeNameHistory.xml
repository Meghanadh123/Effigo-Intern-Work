<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="org.springframework.batch.core.repository.JobExecutionAlreadyRunningException"/>
    <fullyQualifiedTypeName name="org.springframework.batch.core.repository.JobRestartException"/>
    <fullyQualifiedTypeName name="org.springframework.batch.core.repository.JobInstanceAlreadyCompleteException"/>
    <fullyQualifiedTypeName name="org.springframework.batch.core.JobParametersInvalidException"/>
    <fullyQualifiedTypeName name="jakarta.annotation.Resource"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.web.ServerProperties.Tomcat.Resource"/>
    <fullyQualifiedTypeName name="org.apache.tomcat.util.file.ConfigurationSource.Resource"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.core.task.TaskExecutor"/>
    <fullyQualifiedTypeName name="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
    <fullyQualifiedTypeName name="org.springframework.batch.item.file.FlatFileParseException"/>
    <fullyQualifiedTypeName name="org.springframework.batch.core.step.skip.SkipPolicy"/>
    <fullyQualifiedTypeName name="com.example.SpringBatch.policy.CustomSkipPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="java.lang.System.Logger"/>
    <fullyQualifiedTypeName name="org.springframework.batch.core.SkipListener"/>
    <fullyQualifiedTypeName name="com.example.SpringBatch.listener.CustomSkipListener"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="java.sql.Date"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="com.example.MapstructDemo.repository.EmployeeRepository"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter"/>
    <fullyQualifiedTypeName name="com.example.MapstructDemo.service.EmployeeService"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.mapstruct.Mapper"/>
    <fullyQualifiedTypeName name="org.mapstruct.factory.Mappers"/>
    <fullyQualifiedTypeName name="com.example.MapstructDemo.DTO.EmployeeDTO"/>
    <fullyQualifiedTypeName name="com.example.MapstructDemo.entity.Employee"/>
    <fullyQualifiedTypeName name="com.example.MapstructDemo.mapper.EmployeePopulator"/>
    <fullyQualifiedTypeName name="jakarta.transaction.Transactional"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Table"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="org.hibernate.annotations.Collate"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.example.OneToOne.entity.Address"/>
    <fullyQualifiedTypeName name="jakarta.persistence.OneToOne"/>
    <fullyQualifiedTypeName name="jakarta.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="jakarta.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.condition.ConditionalOnCheckpointRestore"/>
    <fullyQualifiedTypeName name="com.example.OneToOne.repo.EmployeeRepo"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.ai.chat.client.ChatClient"/>
    <fullyQualifiedTypeName name="org.springframework.ai.chat.client.ChatClient.Builder"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.example.deepseek.ChatAIService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Flux"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
</qualifiedTypeNameHistroy>
